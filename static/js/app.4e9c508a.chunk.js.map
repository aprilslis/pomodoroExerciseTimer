{"version":3,"sources":["pages/loginPage.js","pages/settingPage.js","components/stopWatch.js","pages/timerHome.js","helper.js","pages/achievementPage.js","App.js","pages/tomato.jpg"],"names":["ScrollView","style","padding","Text","styles","title","TextInput","text","placeholder","View","margin","TouchableHighlight","button","Button","color","onPress","this","props","onLoginPress","Component","StyleSheet","create","container","flex","backgroundColor","resizeMode","justifyContent","alignItems","width","height","fontSize","fontFamily","paddingVertical","paddingHorizontal","borderRadius","marginLeft","marginRight","marginTop","SettingPage","StopWatch","observer","onButtonStart","timer","setInterval","num","Number","state","seconds_Counter","toString","count","minutes_Counter","onButtonStop","notifyUser","setState","length","startDisable","clearInterval","onButtonClear","startTime","callback","push","forEach","MainContainer","counterText","TouchableOpacity","activeOpacity","disabled","buttonText","paddingTop","paddingBottom","textAlign","TimerHome","timerRef","React","createRef","current","addObserver","console","log","flexDirection","Image","logo","source","require","ref","getStreakData","a","async","AsyncStorage","getItem","value","JSON","parse","streak","lastCompletionDate","AchievementPage","navigation","useState","streakData","setStreak","useEffect","addListener","then","Tab","createBottomTabNavigator","App","NavigationContainer","Navigator","screenOptions","route","tabBarIcon","iconName","focused","size","name","Ionicons","tabBarOptions","activeTintColor","inactiveTintColor","Screen","component","module","exports"],"mappings":"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","file":"static/js/app.4e9c508a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    ScrollView,\r\n    Text,\r\n    TextInput,\r\n    View,\r\n    Button,\r\n    TouchableHighlight\r\n} from 'react-native';\r\n\r\n\r\nexport class LoginPage extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <ScrollView style={{ padding: 20, }}>\r\n                <Text\r\n                    style={styles.title}>\r\n                    Pomodoro Login\r\n                </Text>\r\n                <TextInput style={styles.text} placeholder='Email' />\r\n                <TextInput style={styles.text} placeholder='Password' />\r\n                <View style={{ margin: 10 }} />\r\n\r\n\r\n                <TouchableHighlight\r\n                    style={styles.button}>\r\n                    <Button\r\n                        color=\"Orange\"\r\n                        onPress={this.props.onLoginPress}\r\n                        title=\"Submit\"\r\n                    />\r\n                </TouchableHighlight>\r\n\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n        resizeMode: 'cover',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: null,\r\n        height: null\r\n    },\r\n\r\n    title: {\r\n        fontSize: 36,\r\n        fontFamily: 'sans-serif',\r\n        color: 'orange',\r\n        margin: 10,\r\n        alignItems: 'center',\r\n    },\r\n    text: {\r\n        backgroundColor: \"white\",\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 25,\r\n        borderRadius: 25,\r\n        margin: 10,\r\n        alignItems: 'center',\r\n\r\n    },\r\n    button: {\r\n        height: 40,\r\n        width: 160,\r\n        borderRadius: 10,\r\n        color: \"orange\",\r\n        backgroundColor: \"orange\",\r\n        marginLeft: 50,\r\n        marginRight: 50,\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    }\r\n}); \r\n","import React, { Component } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    ScrollView,\r\n    Text,\r\n    TextInput,\r\n    View,\r\n    Button,\r\n    TouchableHighlight\r\n} from 'react-native';\r\n\r\nexport class SettingPage extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <ScrollView style={{ padding: 20, }}>\r\n                <Text\r\n                    style={styles.title}>\r\n                    Settings\r\n                </Text>\r\n                <TextInput style={styles.text} placeholder='Change Username' />\r\n                <TextInput style={styles.text} placeholder='Change Email' />\r\n                <TextInput style={styles.text} placeholder='Change Password' />\r\n                <TextInput style={styles.text} placeholder='Confirm New Password' />\r\n                <View style={{ margin: 10 }} />\r\n\r\n                <TouchableHighlight\r\n                    style={styles.button}>\r\n                    <Button\r\n                        color=\"Orange\"\r\n                        onPress={this.props.onLoginPress}\r\n                        title=\"Save Changes\"\r\n                    />\r\n                </TouchableHighlight>\r\n\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n        resizeMode: 'cover',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: null,\r\n        height: null\r\n    },\r\n\r\n    title: {\r\n        fontSize: 36,\r\n        fontFamily: 'sans-serif',\r\n        color: 'orange',\r\n        margin: 10,\r\n        alignItems: 'center',\r\n    },\r\n    text: {\r\n        backgroundColor: \"white\",\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 25,\r\n        borderRadius: 25,\r\n        margin: 10,\r\n        alignItems: 'center',\r\n\r\n    },\r\n    button: {\r\n        height: 40,\r\n        width: 160,\r\n        borderRadius: 10,\r\n        color: \"orange\",\r\n        backgroundColor: \"orange\",\r\n        marginLeft: 50,\r\n        marginRight: 50,\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n    }\r\n\r\n}); \r\n","import React, {Component} from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\n\r\n\r\nexport default class StopWatch extends Component {\r\n \r\n  observer = [];\r\n  addObserver(callback){\r\n    this.observer.push(callback);\r\n  }\r\n  notifyUser(){\r\n    this.observer.forEach(callback => callback());\r\n  }\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n        timer: null,\r\n        minutes_Counter: this.props.startTime,\r\n        seconds_Counter: '00',\r\n        startDisable: false\r\n      }\r\n    }\r\n   \r\n    componentWillUnmount() {\r\n      clearInterval(this.state.timer);\r\n    }\r\n   \r\n    onButtonStart = () => {\r\n   \r\n      let timer = setInterval(() => {\r\n   \r\n        var num = (Number(this.state.seconds_Counter) - 1).toString(),\r\n          count = this.state.minutes_Counter;\r\n   \r\n        if (Number(this.state.seconds_Counter) == 0) {\r\n          count = (Number(this.state.minutes_Counter) - 1).toString();\r\n          num = '59';\r\n        }\r\n        if(this.state.seconds_Counter == '00' && this.state.minutes_Counter == '00'){\r\n          this.onButtonStop();\r\n          this.notifyUser();\r\n          return;\r\n        }\r\n   \r\n        this.setState({\r\n          minutes_Counter: count.length == 1 ? '0' + count : count,\r\n          seconds_Counter: num.length == 1 ? '0' + num : num\r\n        });\r\n      }, 1000);\r\n      this.setState({ timer });\r\n   \r\n      this.setState({startDisable : true})\r\n    }\r\n   \r\n   \r\n    onButtonStop = () => {\r\n      clearInterval(this.state.timer);\r\n      this.setState({startDisable : false})\r\n    }\r\n   \r\n   \r\n    onButtonClear = () => {\r\n      this.setState({\r\n        timer: null,\r\n        minutes_Counter: '25',\r\n        seconds_Counter: '00',\r\n      });\r\n    }\r\n   \r\n    render() {\r\n   \r\n      return (\r\n        <View style={styles.MainContainer}>\r\n   \r\n          <Text style={styles.counterText}>{this.state.minutes_Counter} : {this.state.seconds_Counter}</Text>\r\n   \r\n          <TouchableOpacity\r\n            onPress={this.onButtonStart}\r\n            activeOpacity={0.6}\r\n            style={[styles.button, { backgroundColor: this.state.startDisable ? '#B0BEC5' : '#FF6F00' }]} \r\n            disabled={this.state.startDisable} >\r\n   \r\n            <Text style={styles.buttonText}>START</Text>\r\n   \r\n          </TouchableOpacity>\r\n   \r\n          <TouchableOpacity\r\n            onPress={this.onButtonStop}\r\n            activeOpacity={0.6}\r\n            style={[styles.button, { backgroundColor:  '#FF6F00'}]} >\r\n   \r\n            <Text style={styles.buttonText}>STOP</Text>\r\n   \r\n          </TouchableOpacity>\r\n   \r\n          <TouchableOpacity\r\n            onPress={this.onButtonClear}\r\n            activeOpacity={0.6}\r\n            style={[styles.button, { backgroundColor: this.state.startDisable ? '#B0BEC5' : '#FF6F00' }]} \r\n            disabled={this.state.startDisable} >\r\n   \r\n            <Text style={styles.buttonText}> CLEAR </Text>\r\n   \r\n          </TouchableOpacity>\r\n   \r\n        </View>\r\n   \r\n      );\r\n    }\r\n  }\r\n   \r\n   \r\n   \r\n  const styles = StyleSheet.create({\r\n    MainContainer: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: '#FFFFFF',\r\n    },\r\n    button: {\r\n      width: 1000,\r\n      paddingTop:8,\r\n      paddingBottom:8,\r\n      borderRadius:7,\r\n      marginTop: 10,\r\n    },\r\n    buttonText:{\r\n        color:'#fff',\r\n        textAlign:'center',\r\n        fontSize: 20\r\n    },\r\n    counterText:{\r\n   \r\n      fontSize: 28,\r\n      color: '#000'\r\n    }\r\n  });\r\n  ","import React, {Component} from 'react';\r\nimport { StyleSheet, Text, View, Image, Style, Styles } from 'react-native';\r\nimport StopWatch from '../components/stopWatch';\r\n\r\nexport class TimerHome extends Component{\r\n    constructor(){\r\n        super();\r\n        this.timerRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.timerRef.current.addObserver(()=>console.log(\"notified\"));\r\n        //Usage:\r\n        //The function will be call when the timer reach 0\r\n        //this.timerRef.current.addObserver(functionName));\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={{flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFFFFF'}}>\r\n            <Image\r\n                style={styles.logo}\r\n                source={require('./tomato.jpg')}\r\n            />\r\n            <StopWatch ref={this.timerRef} startTime='5'> </StopWatch>\r\n        </View>);\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    logo: {\r\n      width: 400,\r\n      height: 25,\r\n      flex: 1,\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    }\r\n  });","import AsyncStorage from '@react-native-community/async-storage';\r\n\r\nconst streakKey = 'streak';\r\n\r\nfunction formatTime(time){\r\n    if(Number(time) >= 10) return time;\r\n    else \"0\" + time;\r\n}\r\nexport async function getStreakData(defaultVal = null){\r\n    const value = await AsyncStorage.getItem(streakKey)\r\n    if(value) {\r\n    return JSON.parse(value);\r\n    }\r\n    return {streak:0,lastCompletionDate:\"\"};\r\n}\r\nexport async function resetStreak(){\r\n    let value = await getStreakData();\r\n    value.streak = 0;\r\n    AsyncStorage.setItem(streakKey,JSON.stringify(value));\r\n}\r\nexport async function increaseStreak(){\r\n    let value = await getStreakData();\r\n    value.streak += 1;\r\n    let curDate = new Date();\r\n    value.lastCompletionDate = curDate.toDateString() + \" at \" + formatTime(curDate.getHours()) + \" : \" + formatTime(curDate.getMinutes());\r\n    AsyncStorage.setItem(streakKey,JSON.stringify(value));\r\n} ","import React, {useEffect, useState} from 'react';\r\nimport {Text, View } from 'react-native';\r\nimport { getStreakData } from '../helper';\r\n\r\nexport function AchievementPage({navigation}){\r\n    const [streakData,setStreak] = useState({streak:0,lastCompletionDate:\"\"});\r\n    useEffect(()=>{\r\n        const subscription = navigation.addListener('focus', () => {\r\n            getStreakData(streakData).then((value) =>{\r\n                setStreak(value);\r\n              });\r\n        });\r\n        return subscription; //unsubscribe on unmount\r\n    })\r\n\r\n    return(\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text>Achievement</Text>\r\n            <Text>Streak: {streakData.streak}</Text>\r\n            <Text>Last Completed Time: {streakData.lastCompletionDate}</Text>\r\n\r\n        </View>\r\n    );\r\n} ","import React, {Component} from 'react';\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { LoginPage } from './pages/loginPage';\r\nimport { SettingPage } from './pages/settingPage';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { TimerHome } from './pages/timerHome';\r\nimport { AchievementPage } from './pages/achievementPage';\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            //List of icons name:\r\n            //https://icons.expo.fyi/\r\n            if (route.name === 'Home') {\r\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\r\n            } else if (route.name === 'Settings') {\r\n              iconName = focused ? 'ios-list-box' : 'ios-list';\r\n            } else if (route.name === 'Achievement'){\r\n              iconName = 'ios-journal';\r\n            }\r\n\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: 'tomato',\r\n          inactiveTintColor: 'gray',\r\n        }}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={TimerHome} />\r\n        <Tab.Screen name=\"Achievement\" component={AchievementPage} />\r\n        <Tab.Screen name=\"Settings\" component={SettingPage} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/tomato.f5d1a946.jpg\";"],"sourceRoot":""}